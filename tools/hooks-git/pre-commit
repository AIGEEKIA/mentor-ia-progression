#!/bin/sh

echo "üîç V√©rification des standards Mentor IA..."

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# V√©rifier les IDs explicites
print_status "V√©rification des IDs explicites..."

if git diff --cached --name-only | grep -E '\.(tsx|jsx|ts|js)$' | xargs grep -l "id=\"[a-z0-9]*\"" 2>/dev/null; then
    print_error "‚ùå IDs g√©n√©riques d√©tect√©s. Utilisez des noms explicites."
    print_error "Exemple : id=\"user-profile-edit-button\" au lieu de id=\"btn1\""
    exit 1
fi

print_success "‚úÖ IDs explicites respect√©s"

# V√©rifier les data-testid
print_status "V√©rification des data-testid..."

if git diff --cached --name-only | grep -E '\.(tsx|jsx|ts|js)$' | xargs grep -l "data-testid=" 2>/dev/null; then
    print_success "‚úÖ data-testid pr√©sents"
else
    print_warning "‚ö†Ô∏è  Aucun data-testid d√©tect√©. Assurez-vous d'en ajouter pour les tests."
fi

# V√©rifier les attributs ARIA
print_status "V√©rification des attributs ARIA..."

if git diff --cached --name-only | grep -E '\.(tsx|jsx|ts|js)$' | xargs grep -l "aria-label\|aria-expanded\|aria-controls\|role=" 2>/dev/null; then
    print_success "‚úÖ Attributs ARIA pr√©sents"
else
    print_warning "‚ö†Ô∏è  Aucun attribut ARIA d√©tect√©. Am√©liorez l'accessibilit√©."
fi

# V√©rifier les images avec alt
print_status "V√©rification des images avec alt..."

if git diff --cached --name-only | grep -E '\.(tsx|jsx|ts|js)$' | xargs grep -l "<img" 2>/dev/null | xargs grep -L "alt=" 2>/dev/null; then
    print_error "‚ùå Images sans attribut alt d√©tect√©es. Ajoutez des descriptions."
    exit 1
fi

print_success "‚úÖ Images avec alt respect√©es"

# V√©rifier les liens avec aria-label ou contenu
print_status "V√©rification des liens accessibles..."

if git diff --cached --name-only | grep -E '\.(tsx|jsx|ts|js)$' | xargs grep -l "<a" 2>/dev/null | xargs grep -L "aria-label\|>[^<]*[a-zA-Z]" 2>/dev/null; then
    print_warning "‚ö†Ô∏è  Liens sans contenu ou aria-label d√©tect√©s."
fi

# V√©rifier les boutons avec aria-label
print_status "V√©rification des boutons accessibles..."

if git diff --cached --name-only | grep -E '\.(tsx|jsx|ts|js)$' | xargs grep -l "<button" 2>/dev/null | xargs grep -L "aria-label\|>[^<]*[a-zA-Z]" 2>/dev/null; then
    print_warning "‚ö†Ô∏è  Boutons sans aria-label ou contenu d√©tect√©s."
fi

# V√©rifier les console.log en production
print_status "V√©rification des console.log..."

if git diff --cached --name-only | grep -E '\.(tsx|jsx|ts|js)$' | xargs grep -l "console\.log" 2>/dev/null; then
    print_warning "‚ö†Ô∏è  console.log d√©tect√©s. Supprimez-les en production."
fi

# V√©rifier les TODO et FIXME
print_status "V√©rification des TODO et FIXME..."

if git diff --cached --name-only | grep -E '\.(tsx|jsx|ts|js)$' | xargs grep -l "TODO\|FIXME" 2>/dev/null; then
    print_warning "‚ö†Ô∏è  TODO ou FIXME d√©tect√©s. Traitez-les avant le commit."
fi

# V√©rifier la longueur des lignes
print_status "V√©rification de la longueur des lignes..."

if git diff --cached --name-only | grep -E '\.(tsx|jsx|ts|js)$' | xargs grep -l ".\{100,\}" 2>/dev/null; then
    print_warning "‚ö†Ô∏è  Lignes trop longues d√©tect√©es (>100 caract√®res)."
fi

print_success "‚úÖ Standards Mentor IA respect√©s !"
echo ""
echo "üéØ Commit autoris√© !"
echo "üìù N'oubliez pas de :"
echo "   - Tester votre code"
echo "   - Documenter les changements"
echo "   - Cr√©er du contenu YouTube"
echo "   - Mesurer vos progr√®s"
echo "" 